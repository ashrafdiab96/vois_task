{"ast":null,"code":"import { Chart, registerables } from 'chart.js';\nimport data from '../../assets/data.json';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\n\nfunction HomeComponent_option_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const coun_r4 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", coun_r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", coun_r4, \" \");\n  }\n}\n\nfunction HomeComponent_option_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const camp_r5 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", camp_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", camp_r5, \" \");\n  }\n}\n\nfunction HomeComponent_option_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const school_r6 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", school_r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", school_r6, \" \");\n  }\n}\n\nfunction HomeComponent_div_50_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"div\", 25);\n    i0.ɵɵelement(3, \"i\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 27)(5, \"h4\", 28);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"h6\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelement(9, \"br\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const d_r9 = ctx.$implicit;\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"\", d_r9.lessons, \" lessons\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"in \", d_r9.school, \"\");\n  }\n}\n\nfunction HomeComponent_div_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtemplate(1, HomeComponent_div_50_div_1_Template, 10, 2, \"div\", 24);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const data_r7 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", data_r7);\n  }\n}\n/**\r\n * array of colors\r\n */\n\n\nconst colors = ['#eebbba', '#ceb4e2', '#4eb1a7', '#ebdf76', '#9fd95c'];\nexport let HomeComponent = /*#__PURE__*/(() => {\n  class HomeComponent {\n    constructor() {}\n    /**\r\n     * function to get selected country\r\n     * @param countryVal\r\n     */\n\n\n    selectedCountry(countryVal) {\n      this.myChart.destroy();\n      this.currCountry = countryVal.value;\n      localStorage.setItem('current_country', countryVal.value);\n      this.drawChart();\n    }\n    /**\r\n     * function to get selected camp\r\n     * @param campVal\r\n     */\n\n\n    selectedCamp(campVal) {\n      this.myChart.destroy();\n      this.currCountry = campVal.value;\n      localStorage.setItem('current_camp', campVal.value);\n      this.drawChart();\n    }\n    /**\r\n     * function to get selected camp\r\n     * @param schoolVal\r\n     */\n\n\n    selectedSchool(schoolVal) {\n      this.myChart.destroy();\n      this.currCountry = schoolVal.value;\n      localStorage.setItem('current_school', schoolVal.value);\n      this.drawChart();\n    }\n    /**\r\n     * function to draw the chart\r\n     */\n\n\n    drawChart() {\n      /**\r\n       * variables declaration\r\n       */\n      let currSchoolsForCamp = [];\n      /* carry schools for specific camp and country */\n\n      let currDataForSchoolCamp = [];\n      /* carry data for school in specific camp */\n\n      let currUniqueSchools = [];\n      /* carry unique schools for specific camp and country */\n\n      let schoolsData;\n      /* carry camp schools data in an object */\n\n      let allSchoolsLessonsArr = [];\n      /* carry all schools data in an array */\n\n      let currDataArr = [];\n      /* carry the sata for every school */\n\n      let finalData = [];\n      /* carry final camp data */\n\n      /**\r\n       * set default value to camp, country, and schol\r\n       */\n\n      /* current camp */\n\n      this.currCamp = localStorage.getItem('current_camp') || 'Omaka';\n      /* current country */\n\n      this.currCountry = localStorage.getItem('current_country') || 'Egypt';\n      /* current school */\n\n      this.currSchool = localStorage.getItem('current_school') || 'all';\n      /**\r\n       * map data from data.json and assign it to the above values\r\n       */\n\n      this.id = data.map(id => id.id);\n      this.month = data.map(month => month.month);\n      this.camp = data.map(camp => camp.camp);\n      this.country = data.map(country => country.country);\n      this.school = data.map(school => school.school);\n      this.lessons = data.map(lessons => lessons.lessons);\n      /**\r\n       * get unique values and assign it to the above arrays\r\n       */\n\n      this.allCountries = [...new Set(this.country)];\n      this.allCamps = [...new Set(this.camp)];\n      this.allSchools = [...new Set(this.school)];\n      /**\r\n       * get data for schols for specific country and camp\r\n       * check if current school is equal to all, get data for all schools\r\n       * else if current school is equal to specific value, get data for this school\r\n       */\n\n      for (let i = 0; i < data.length; i++) {\n        if (this.currCountry == data[i].country) {\n          if (this.currCamp == data[i].camp) {\n            if (this.currSchool == 'all') {\n              if (this.currCamp == data[i].camp && this.currCountry == data[i].country) {\n                currSchoolsForCamp.push(data[i].school);\n                currDataForSchoolCamp.push({\n                  school: data[i].school,\n                  lessons: data[i].lessons\n                });\n              }\n            } else {\n              if (this.currCamp == data[i].camp && this.currCountry == data[i].country && this.currSchool == data[i].school) {\n                currSchoolsForCamp.push(data[i].school);\n                currDataForSchoolCamp.push({\n                  school: data[i].school,\n                  lessons: data[i].lessons\n                });\n              }\n            }\n          }\n        }\n      }\n\n      currUniqueSchools = [...new Set(currSchoolsForCamp)];\n      /**\r\n       * function to group some data\r\n       */\n\n      function groupBy(arr, property) {\n        return arr.reduce((acc, cur) => {\n          acc[cur[property]] = [...(acc[cur[property]] || []), cur];\n          return acc;\n        }, {});\n      }\n      /**\r\n       * calculate the sum of all lessons for specific camp\r\n       */\n\n\n      this.allLessons = 0;\n\n      for (let i = 0; i < currDataForSchoolCamp.length; i++) {\n        this.allLessons += currDataForSchoolCamp[i].lessons;\n      }\n      /**\r\n       * group the data for every school\r\n       */\n\n\n      let currData = groupBy(currDataForSchoolCamp, 'school');\n      /**\r\n       * put every school data in an array\r\n       */\n\n      for (let i in currData) {\n        currDataArr.push(currData[i]);\n      }\n\n      this.currDataArr = currDataArr;\n      /**\r\n       * put camp data in an array to show them in the page\r\n       */\n\n      for (let i = 0; i < currDataArr.length; i++) {\n        const res = Array.from(currDataArr[i].reduce((m, {\n          school,\n          lessons\n        }) => m.set(school, (m.get(school) || 0) + lessons), new Map()), ([school, lessons]) => ({\n          school,\n          lessons\n        }));\n        finalData.push(res);\n      }\n\n      this.finalData = finalData;\n      /**\r\n       * group camp data in an object\r\n       */\n\n      schoolsData = groupBy(currDataForSchoolCamp, 'school');\n\n      for (let property in schoolsData) {\n        let schoolsLessonsArr = [];\n\n        for (let i = 0; i < schoolsData[property].length; i++) {\n          schoolsLessonsArr.push(schoolsData[property][i]);\n        }\n\n        allSchoolsLessonsArr.push(schoolsLessonsArr);\n      }\n\n      let campItems = [];\n      allSchoolsLessonsArr.forEach(function (childArray) {\n        childArray.forEach(function (item) {\n          campItems.push(item);\n        });\n      });\n      /**\r\n       * register all types of charts\r\n       */\n\n      Chart.register(...registerables);\n      /**\r\n       * create new chart\r\n       */\n\n      this.myChart = new Chart('myChart', {\n        type: 'line',\n        data: {\n          labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n          datasets: []\n        },\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          },\n          plugins: {\n            legend: {\n              position: 'right',\n              labels: {\n                usePointStyle: true\n              }\n            }\n          }\n        }\n      });\n      /**\r\n       * get every school lessons in an array\r\n       */\n\n      let allLessons = [];\n\n      for (let i = 0; i < currUniqueSchools.length; i++) {\n        let schoolLessons = [];\n\n        for (let j = 0; j < campItems.length; j++) {\n          if (currUniqueSchools[i] == campItems[j].school) {\n            schoolLessons.push(campItems[j]['lessons']);\n          }\n        }\n\n        allLessons.push(schoolLessons);\n      }\n      /**\r\n       * add datasets dynamically and update the chart\r\n       */\n\n\n      for (let i = 0; i < currUniqueSchools.length; i++) {\n        this.myChart.data.datasets.push({\n          label: currUniqueSchools[i],\n          data: allLessons[i],\n          fill: false,\n          borderColor: colors[i],\n          borderWidth: 4,\n          backgroundColor: '#fcfefb'\n        });\n        this.myChart.update();\n      }\n    }\n\n    ngOnInit() {\n      this.drawChart();\n    }\n\n  }\n\n  HomeComponent.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)();\n  };\n\n  HomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    decls: 51,\n    vars: 6,\n    consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"http-equiv\", \"X-UA-Compatible\", \"content\", \"IE=edge\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1.0\"], [1, \"content\"], [1, \"title\"], [1, \"filters\"], [1, \"form-group\"], [1, \"row\"], [1, \"col-md-4\"], [1, \"form-control\", \"w-75\", \"d-inline\", 3, \"change\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"value\", \"all\"], [\"id\", \"divChart\"], [1, \"col-md-8\"], [\"id\", \"myChart\"], [1, \"col-md-1\"], [1, \"line\"], [1, \"co-md-3\"], [1, \"all-lessons\"], [1, \"all-schools\"], [\"class\", \"school\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [1, \"school\"], [4, \"ngFor\", \"ngForOf\"], [1, \"col-md-2\"], [1, \"fa-solid\", \"fa-circle-dot\", \"mt-2\"], [1, \"col-md-10\"], [1, \"test\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n        i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2)(4, \"meta\", 3);\n        i0.ɵɵelementStart(5, \"title\");\n        i0.ɵɵtext(6, \"Analysis FE Challenge\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"body\")(8, \"div\", 4)(9, \"div\", 5)(10, \"h1\");\n        i0.ɵɵtext(11, \"Analysis chart\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"br\");\n        i0.ɵɵelementStart(13, \"h3\");\n        i0.ɵɵtext(14, \"Number of lessons\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(15, \"br\");\n        i0.ɵɵelementStart(16, \"div\", 6)(17, \"form\", 7)(18, \"div\", 8)(19, \"div\", 9)(20, \"label\");\n        i0.ɵɵtext(21, \"Select Country \\u00A0\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"select\", 10);\n        i0.ɵɵlistener(\"change\", function HomeComponent_Template_select_change_22_listener($event) {\n          return ctx.selectedCountry($event.target);\n        });\n        i0.ɵɵtemplate(23, HomeComponent_option_23_Template, 2, 2, \"option\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"div\", 9)(25, \"label\");\n        i0.ɵɵtext(26, \"Select Camp \\u00A0\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"select\", 10);\n        i0.ɵɵlistener(\"change\", function HomeComponent_Template_select_change_27_listener($event) {\n          return ctx.selectedCamp($event.target);\n        });\n        i0.ɵɵtemplate(28, HomeComponent_option_28_Template, 2, 2, \"option\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(29, \"div\", 9)(30, \"label\");\n        i0.ɵɵtext(31, \"Select School \\u00A0\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"select\", 10);\n        i0.ɵɵlistener(\"change\", function HomeComponent_Template_select_change_32_listener($event) {\n          return ctx.selectedSchool($event.target);\n        });\n        i0.ɵɵelementStart(33, \"option\", 12);\n        i0.ɵɵtext(34, \"Show All\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(35, HomeComponent_option_35_Template, 2, 2, \"option\", 11);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(36, \"div\", 13)(37, \"div\", 8)(38, \"div\", 14);\n        i0.ɵɵelement(39, \"canvas\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"div\", 16);\n        i0.ɵɵelement(41, \"div\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"div\", 18)(43, \"div\", 19)(44, \"h2\");\n        i0.ɵɵtext(45);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"h6\");\n        i0.ɵɵtext(47);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(48, \"br\");\n        i0.ɵɵelementStart(49, \"div\", 20);\n        i0.ɵɵtemplate(50, HomeComponent_div_50_Template, 2, 1, \"div\", 21);\n        i0.ɵɵelementEnd()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(23);\n        i0.ɵɵproperty(\"ngForOf\", ctx.allCountries);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.allCamps);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.allSchools);\n        i0.ɵɵadvance(10);\n        i0.ɵɵtextInterpolate1(\"\", ctx.allLessons, \" lessons\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"in \", ctx.currCamp, \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.finalData);\n      }\n    },\n    directives: [i1.NgForOf],\n    styles: [\"@import\\\"https://fonts.googleapis.com/css2?family=Akshar:wght@300&family=Kanit:wght@300&family=Roboto+Mono&family=Roboto:wght@300&display=swap\\\";html[_ngcontent-%COMP%], body[_ngcontent-%COMP%]{height:100%}body[_ngcontent-%COMP%]{background-color:#f5f6fa;font-family:Akshar,sans-serif}.content[_ngcontent-%COMP%]{width:95%;margin:auto;padding:20px}.content[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]   *[_ngcontent-%COMP%]{color:#b8a0cc}.content[_ngcontent-%COMP%]   .filters[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{color:#9b9b9b;font-weight:600}.content[_ngcontent-%COMP%]   .filters[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{background-color:#8dd0fa;border:2px solid #88c6e8}.content[_ngcontent-%COMP%]   #divChart[_ngcontent-%COMP%]{background-color:#fff;padding:20px}.content[_ngcontent-%COMP%]   #divChart[_ngcontent-%COMP%]   .line[_ngcontent-%COMP%]{height:100%;width:2px;background-color:#ccc}.content[_ngcontent-%COMP%]   #divChart[_ngcontent-%COMP%]   .all-lessons[_ngcontent-%COMP%]   *[_ngcontent-%COMP%]{color:#bcbbbb}.content[_ngcontent-%COMP%]   #divChart[_ngcontent-%COMP%]   .all-schools[_ngcontent-%COMP%]   .school[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   .col-md-10[_ngcontent-%COMP%]   *[_ngcontent-%COMP%], .content[_ngcontent-%COMP%]   #divChart[_ngcontent-%COMP%]   .all-schools[_ngcontent-%COMP%]   .school[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   .col-md-2[_ngcontent-%COMP%]   *[_ngcontent-%COMP%]{color:#d7beea}\"]\n  });\n  return HomeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}